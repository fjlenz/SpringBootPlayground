kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: springbootplayground
  namespace: fjlenz-dev
  uid: 6c96d0d4-947f-4d18-a6ad-d2e70dd4ff7a
  resourceVersion: '86103205'
  generation: 20
  creationTimestamp: '2021-05-28T19:55:30Z'
  managedFields:
    - manager: Mozilla
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2021-05-28T20:31:03Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:spec':
          'f:replicas': {}
          'f:selector':
            .: {}
            'f:app': {}
          'f:strategy':
            'f:activeDeadlineSeconds': {}
            'f:rollingParams':
              .: {}
              'f:intervalSeconds': {}
              'f:maxSurge': {}
              'f:maxUnavailable': {}
              'f:timeoutSeconds': {}
              'f:updatePeriodSeconds': {}
            'f:type': {}
          'f:template':
            .: {}
            'f:metadata':
              .: {}
              'f:creationTimestamp': {}
              'f:labels':
                .: {}
                'f:app': {}
            'f:spec':
              'f:volumes':
                .: {}
                'k:{"name":"oneagent"}':
                  .: {}
                  'f:emptyDir': {}
                  'f:name': {}
              'f:containers':
                .: {}
                'k:{"name":"springbootplayground"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/opt/dynatrace/oneagent"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources': {}
                  'f:livenessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:env':
                    .: {}
                    'k:{"name":"DT_NETWORK_ZONE"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"LD_PRELOAD"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:readinessProbe':
                    .: {}
                    'f:failureThreshold': {}
                    'f:httpGet':
                      .: {}
                      'f:path': {}
                      'f:port': {}
                      'f:scheme': {}
                    'f:periodSeconds': {}
                    'f:successThreshold': {}
                    'f:timeoutSeconds': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:ports':
                    .: {}
                    'k:{"containerPort":8080,"protocol":"TCP"}':
                      .: {}
                      'f:containerPort': {}
                      'f:protocol': {}
                  'f:name': {}
              'f:dnsPolicy': {}
              'f:restartPolicy': {}
              .: {}
              'f:schedulerName': {}
              'f:terminationGracePeriodSeconds': {}
              'f:initContainers':
                .: {}
                'k:{"name":"install-oneagent"}':
                  'f:image': {}
                  'f:volumeMounts':
                    .: {}
                    'k:{"mountPath":"/opt/dynatrace/oneagent"}':
                      .: {}
                      'f:mountPath': {}
                      'f:name': {}
                  'f:terminationMessagePolicy': {}
                  .: {}
                  'f:resources': {}
                  'f:args': {}
                  'f:command': {}
                  'f:env':
                    .: {}
                    'k:{"name":"DT_API_URL"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"DT_ONEAGENT_OPTIONS"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                    'k:{"name":"DT_PAAS_TOKEN"}':
                      .: {}
                      'f:name': {}
                      'f:value': {}
                  'f:terminationMessagePath': {}
                  'f:imagePullPolicy': {}
                  'f:name': {}
              'f:securityContext': {}
          'f:triggers': {}
    - manager: openshift-controller-manager
      operation: Update
      apiVersion: apps.openshift.io/v1
      time: '2021-05-28T20:31:07Z'
      fieldsType: FieldsV1
      fieldsV1:
        'f:status':
          'f:updatedReplicas': {}
          'f:readyReplicas': {}
          'f:conditions':
            .: {}
            'k:{"type":"Available"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:status': {}
              'f:type': {}
            'k:{"type":"Progressing"}':
              .: {}
              'f:lastTransitionTime': {}
              'f:lastUpdateTime': {}
              'f:message': {}
              'f:reason': {}
              'f:status': {}
              'f:type': {}
          'f:details':
            .: {}
            'f:causes': {}
            'f:message': {}
          'f:replicas': {}
          'f:availableReplicas': {}
          'f:observedGeneration': {}
          'f:unavailableReplicas': {}
          'f:latestVersion': {}
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 3
  revisionHistoryLimit: 10
  test: false
  selector:
    app: springbootplayground
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: springbootplayground
    spec:
      volumes:
        - name: oneagent
          emptyDir: {}
      initContainers:
        - resources: {}
          terminationMessagePath: /dev/termination-log
          name: install-oneagent
          command:
            - /bin/sh
          env:
            - name: DT_API_URL
              value: 'https://day02336.live.dynatrace.com/api'
            - name: DT_PAAS_TOKEN
              value: ENTERTOKENHEREviaOpenShiftSecret
            - name: DT_ONEAGENT_OPTIONS
              value: flavor=default&include=java
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: oneagent
              mountPath: /opt/dynatrace/oneagent
          terminationMessagePolicy: File
          image: 'alpine:3.8'
          args:
            - '-c'
            - >-
              ARCHIVE=$(mktemp) && wget -O $ARCHIVE
              "$DT_API_URL/v1/deployment/installer/agent/unix/paas/latest?Api-Token=$DT_PAAS_TOKEN&$DT_ONEAGENT_OPTIONS"
              && unzip -o -d /opt/dynatrace/oneagent $ARCHIVE && rm -f $ARCHIVE
      containers:
        - resources: {}
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: springbootplayground
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: LD_PRELOAD
              value: /opt/dynatrace/oneagent/agent/lib64/liboneagentproc.so
            - name: DT_NETWORK_ZONE
              value: fjsnetworkzone
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          volumeMounts:
            - name: oneagent
              mountPath: /opt/dynatrace/oneagent
          terminationMessagePolicy: File
          image: >-
            image-registry.openshift-image-registry.svc:5000/fjlenz-dev/springbootplayground
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
status:
  observedGeneration: 20
  details:
    message: config change
    causes:
      - type: ConfigChange
  availableReplicas: 3
  unavailableReplicas: 0
  latestVersion: 17
  updatedReplicas: 3
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2021-05-28T20:31:36Z'
      lastTransitionTime: '2021-05-28T20:31:34Z'
      reason: NewReplicationControllerAvailable
      message: replication controller "springbootplayground-17" successfully rolled out
    - type: Available
      status: 'True'
      lastUpdateTime: '2021-05-28T20:45:30Z'
      lastTransitionTime: '2021-05-28T20:45:30Z'
      message: Deployment config has minimum availability.
  replicas: 3
  readyReplicas: 3
